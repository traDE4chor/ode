/*
 * TraDE Middleware API
 * This is the API of the TraDE middleware.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: trade4chor@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.trade.client.jersey.api;

import io.swagger.trade.client.jersey.ApiException;
import io.swagger.trade.client.jersey.model.CorrelationPropertyArray;
import io.swagger.trade.client.jersey.model.DataElementInstanceArrayWithLinks;
import io.swagger.trade.client.jersey.model.DataElementInstanceWithLinks;
import io.swagger.trade.client.jersey.model.Error;
import io.swagger.trade.client.jersey.model.InvalidInput;
import io.swagger.trade.client.jersey.model.NotFound;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DataElementInstanceApi
 */
@Ignore
public class DataElementInstanceApiTest {

    private final DataElementInstanceApi api = new DataElementInstanceApi();

    
    /**
     * Find a data element instance by Id
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDataElementInstanceTest() throws ApiException {
        String instanceId = null;
        DataElementInstanceWithLinks response = api.getDataElementInstance(instanceId);

        // TODO: test validations
    }
    
    /**
     * Get a data element instance from a data object instance by the name of the corresponding data element
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDataElementInstanceByDataElementNameTest() throws ApiException {
        String instanceId = null;
        String dataElementName = null;
        DataElementInstanceWithLinks response = api.getDataElementInstanceByDataElementName(instanceId, dataElementName);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets all available &#x60;DataElementInstance&#x60; resources. Optional query parameter of **start** and **size** enable pagination of the collection of data element instance resources and param **status** filters result list by status of the data element instances.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDataElementInstancesTest() throws ApiException {
        String instanceId = null;
        Integer start = null;
        Integer size = null;
        String status = null;
        DataElementInstanceArrayWithLinks response = api.getDataElementInstances(instanceId, start, size, status);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets all available &#x60;DataElementInstance&#x60; resources. Optional query parameter of **start** and **size** enable pagination of the collection of data element instance resources and param **status** filters result list by status of the data element instances.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDataElementInstancesOfDataElementTest() throws ApiException {
        String dataElementId = null;
        Integer start = null;
        Integer size = null;
        String status = null;
        DataElementInstanceArrayWithLinks response = api.getDataElementInstancesOfDataElement(dataElementId, start, size, status);

        // TODO: test validations
    }
    
    /**
     * Provides a list of all data element instances that use/refer to the data value with the given id. Optional query parameter of **start** and **size** enable pagination of the collection of data element instance resources.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDataElementInstancesUsingDataValueTest() throws ApiException {
        String dataValueId = null;
        Integer start = null;
        Integer size = null;
        DataElementInstanceArrayWithLinks response = api.getDataElementInstancesUsingDataValue(dataValueId, start, size);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Query an available &#x60;DataElementInstance&#x60; resource based on specified parameters. Query parameters **dataModelName**, **dataObjectName** and **dataElementName** as well as **correlationProperties** transfered as request body are used as a query to find a matching data element instance.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void queryDataElementInstanceTest() throws ApiException {
        String dataModelNamespace = null;
        String dataModelName = null;
        String dataObjectName = null;
        String dataElementName = null;
        CorrelationPropertyArray correlationProperties = null;
        DataElementInstanceWithLinks response = api.queryDataElementInstance(dataModelNamespace, dataModelName, dataObjectName, dataElementName, correlationProperties);

        // TODO: test validations
    }
    
}
