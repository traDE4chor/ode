/*
 * TraDE Middleware API
 * This is the API of the TraDE middleware.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: trade4chor@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.trade.client.jersey.api;

import io.swagger.trade.client.jersey.ApiException;
import io.swagger.trade.client.jersey.model.CorrelationPropertyArray;
import io.swagger.trade.client.jersey.model.DataObjectInstanceArrayWithLinks;
import io.swagger.trade.client.jersey.model.DataObjectInstanceData;
import io.swagger.trade.client.jersey.model.DataObjectInstanceWithLinks;
import io.swagger.trade.client.jersey.model.Error;
import io.swagger.trade.client.jersey.model.InvalidInput;
import io.swagger.trade.client.jersey.model.NotFound;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DataObjectInstanceApi
 */
@Ignore
public class DataObjectInstanceApiTest {

    private final DataObjectInstanceApi api = new DataObjectInstanceApi();

    
    /**
     * Creates a data object instance for the specified dataObject. In addition a corresponding data element instance for all data elements of the specified dataObject are created.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addDataObjectInstanceTest() throws ApiException {
        String dataObjectId = null;
        DataObjectInstanceData dataObjectInstanceData = null;
        DataObjectInstanceWithLinks response = api.addDataObjectInstance(dataObjectId, dataObjectInstanceData);

        // TODO: test validations
    }
    
    /**
     * Deletes a data object instance
     *
     * Deletes a complete data object instance and its referenced data element instances from the TraDE middleware
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteDataObjectInstanceTest() throws ApiException {
        String instanceId = null;
        api.deleteDataObjectInstance(instanceId);

        // TODO: test validations
    }
    
    /**
     * Find a data object instance by Id
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDataObjectInstanceTest() throws ApiException {
        String instanceId = null;
        DataObjectInstanceWithLinks response = api.getDataObjectInstance(instanceId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Gets all available &#x60;DataObjectInstance&#x60; resources. Optional query parameter of **start** and **size** enable pagination of the collection of data object instance resources and param **status** filters result list by status of the data object instances.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDataObjectInstancesTest() throws ApiException {
        String dataObjectId = null;
        Integer start = null;
        Integer size = null;
        String status = null;
        DataObjectInstanceArrayWithLinks response = api.getDataObjectInstances(dataObjectId, start, size, status);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Query an available &#x60;DataObjectInstance&#x60; resource based on specified parameters. Query parameters **dataModelName** and **dataObjectName** as well as **correlationProperties** transfered as request body are used as a query to find a matching data object instance.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void queryDataObjectInstanceTest() throws ApiException {
        String dataModelNamespace = null;
        String dataModelName = null;
        String dataObjectName = null;
        CorrelationPropertyArray correlationProperties = null;
        DataObjectInstanceWithLinks response = api.queryDataObjectInstance(dataModelNamespace, dataModelName, dataObjectName, correlationProperties);

        // TODO: test validations
    }
    
}
