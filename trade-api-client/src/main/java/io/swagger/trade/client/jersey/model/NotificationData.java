/*
 * TraDE Middleware API
 * This is the API of the TraDE middleware.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: trade4chor@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.trade.client.jersey.model;

import java.io.Serializable;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.base.Objects;

/**
 * NotificationData
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-06-21T14:24:08.511+02:00")
public class NotificationData implements Serializable {
  private static final long serialVersionUID = 1L;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("typeOfResourceToObserve")
  private ResourceTypeEnum typeOfResourceToObserve = null;

  @JsonProperty("idOfResourceToObserve")
  private String idOfResourceToObserve = null;

  @JsonProperty("resourceFilters")
  private ResourceEventFilterArray resourceFilters = null;

  @JsonProperty("selectedNotifierServiceId")
  private String selectedNotifierServiceId = null;

  @JsonProperty("notifierParameterValues")
  private NotifierServiceParameterArray notifierParameterValues = null;

  public NotificationData name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public NotificationData typeOfResourceToObserve(ResourceTypeEnum typeOfResourceToObserve) {
    this.typeOfResourceToObserve = typeOfResourceToObserve;
    return this;
  }

   /**
   * Get typeOfResourceToObserve
   * @return typeOfResourceToObserve
  **/
  public ResourceTypeEnum getTypeOfResourceToObserve() {
    return typeOfResourceToObserve;
  }

  public void setTypeOfResourceToObserve(ResourceTypeEnum typeOfResourceToObserve) {
    this.typeOfResourceToObserve = typeOfResourceToObserve;
  }

  public NotificationData idOfResourceToObserve(String idOfResourceToObserve) {
    this.idOfResourceToObserve = idOfResourceToObserve;
    return this;
  }

   /**
   * Get idOfResourceToObserve
   * @return idOfResourceToObserve
  **/
  public String getIdOfResourceToObserve() {
    return idOfResourceToObserve;
  }

  public void setIdOfResourceToObserve(String idOfResourceToObserve) {
    this.idOfResourceToObserve = idOfResourceToObserve;
  }

  public NotificationData resourceFilters(ResourceEventFilterArray resourceFilters) {
    this.resourceFilters = resourceFilters;
    return this;
  }

   /**
   * Get resourceFilters
   * @return resourceFilters
  **/
  public ResourceEventFilterArray getResourceFilters() {
    return resourceFilters;
  }

  public void setResourceFilters(ResourceEventFilterArray resourceFilters) {
    this.resourceFilters = resourceFilters;
  }

  public NotificationData selectedNotifierServiceId(String selectedNotifierServiceId) {
    this.selectedNotifierServiceId = selectedNotifierServiceId;
    return this;
  }

   /**
   * Get selectedNotifierServiceId
   * @return selectedNotifierServiceId
  **/
  public String getSelectedNotifierServiceId() {
    return selectedNotifierServiceId;
  }

  public void setSelectedNotifierServiceId(String selectedNotifierServiceId) {
    this.selectedNotifierServiceId = selectedNotifierServiceId;
  }

  public NotificationData notifierParameterValues(NotifierServiceParameterArray notifierParameterValues) {
    this.notifierParameterValues = notifierParameterValues;
    return this;
  }

   /**
   * Get notifierParameterValues
   * @return notifierParameterValues
  **/
  public NotifierServiceParameterArray getNotifierParameterValues() {
    return notifierParameterValues;
  }

  public void setNotifierParameterValues(NotifierServiceParameterArray notifierParameterValues) {
    this.notifierParameterValues = notifierParameterValues;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NotificationData notificationData = (NotificationData) o;
    return Objects.equal(this.name, notificationData.name) &&
        Objects.equal(this.typeOfResourceToObserve, notificationData.typeOfResourceToObserve) &&
        Objects.equal(this.idOfResourceToObserve, notificationData.idOfResourceToObserve) &&
        Objects.equal(this.resourceFilters, notificationData.resourceFilters) &&
        Objects.equal(this.selectedNotifierServiceId, notificationData.selectedNotifierServiceId) &&
        Objects.equal(this.notifierParameterValues, notificationData.notifierParameterValues);
  }

  @Override
  public int hashCode() {
    return Objects.hashCode(name, typeOfResourceToObserve, idOfResourceToObserve, resourceFilters, selectedNotifierServiceId, notifierParameterValues);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NotificationData {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    typeOfResourceToObserve: ").append(toIndentedString(typeOfResourceToObserve)).append("\n");
    sb.append("    idOfResourceToObserve: ").append(toIndentedString(idOfResourceToObserve)).append("\n");
    sb.append("    resourceFilters: ").append(toIndentedString(resourceFilters)).append("\n");
    sb.append("    selectedNotifierServiceId: ").append(toIndentedString(selectedNotifierServiceId)).append("\n");
    sb.append("    notifierParameterValues: ").append(toIndentedString(notifierParameterValues)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

